<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on rds-blog</title>
    <link>https://rahuldshetty.github.io/tags/blog/</link>
    <description>Recent content in blog on rds-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 19 Jan 2021 02:14:00 +0530</lastBuildDate><atom:link href="https://rahuldshetty.github.io/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to create binary search tree in Python3?</title>
      <link>https://rahuldshetty.github.io/blog/how-to-create-binary-search-tree/</link>
      <pubDate>Tue, 19 Jan 2021 02:14:00 +0530</pubDate>
      
      <guid>https://rahuldshetty.github.io/blog/how-to-create-binary-search-tree/</guid>
      <description>What are Binary Search Trees? This will by my first topic on which I will be showing you guys on how to implement a binary search tree datastructre(DS) and go through the basic fundamentals.
So a Binary Search Tree (BST) is a type of graph data structrue where you have many nodes arranged in a reversed tree fashion. Each node starting from the top (which is called as root node) is split into two sub trees.</description>
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>https://rahuldshetty.github.io/blog/1st-post/</link>
      <pubDate>Sun, 03 Jan 2021 20:00:03 +0530</pubDate>
      
      <guid>https://rahuldshetty.github.io/blog/1st-post/</guid>
      <description>How I Created my Blog? I always wanted to have my own personal blog. I had explored different website building solutions like Weebly, Wix but the amount of freedom to do things with them are limited. Even I had started learning React.Js to build one from scratch but it was exhausting to do things. And finally, I found this framework called Hugo which lets you design and maintain websites by using simple Markdown language and supports large theme.</description>
    </item>
    
  </channel>
</rss>
